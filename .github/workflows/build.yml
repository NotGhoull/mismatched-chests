name: CI/CD

on:
  push:
    branches:
      - main
      - feat/**
  pull_request:
    branches:
      - main
      - feat/**

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Cache gradle deps
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download deps for caching
        run: ./gradlew --dry-run --no-daemon

      - name: Get commit SHA
        id: commit_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Read current version from gradle.properties
        id: get_version
        run: |
          version=$(grep -A 1 "# GH_WORKFLOW::VERSION" gradle.properties | grep -oP '(?<=version=).*')
          echo "current_version=$version" >> $GITHUB_OUTPUT

      - name: Set dynamic version
        id: set_version
        run: |
          DYNAMIC_VERSION="${{ steps.get_version.outputs.current_version }}-${{ steps.commit_sha.outputs.sha }}"
          echo "Dynamic version: $DYNAMIC_VERSION"
          echo "new_version=$DYNAMIC_VERSION" >> $GITHUB_OUTPUT      


  build:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        project: [fabric, neoforge, forge]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get version from setup job
        id: get_version
        run: echo "new_version=${{ needs.setup.outputs.new_version }}" >> $GITHUB_OUTPUT

      - name: Update gradle.properties
        run: |
          sed -i "s/^version=.*/version=${{ steps.get_version.outputs.new_version }}/" gradle.properties
          cat gradle.properties

#      Because fabric just has to be different
      - name: Build fabric
        if: matrix.project == 'fabric'
        run: ./gradlew :fabric:remapjar

      - name: Build ${{ matrix.project }}
        if: matrix.project != 'fabric'
        run: ./gradlew :${{ matrix.project }}:jar --no-daemon

      - name: Set artifact path
        id: set_path
        run: |
          if [ "${{ matrix.project }}" == "forge" ]; then
            echo "path=./forge/build/libs/Mismatched Chests-forge-1.21.1-${{ steps.get_version.outputs.new_version }}.jar" >> $GITHUB_OUTPUT
          else
            echo "path=./${{ matrix.project }}/build/libs/mismatched_chests-${{ matrix.project }}-1.21.1-${{ steps.get_version.outputs.new_version }}.jar" >> $GITHUB_OUTPUT
          fi

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: "mismatched-chests-${{ matrix.project }}"
          path: ${{ steps.set_path.outputs.path }}
